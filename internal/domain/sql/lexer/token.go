package lexer

type TokenKind int

const (
	EOF TokenKind = iota
	KW_AS
	KW_FROM
	KW_SELECT
	// Op√©rateurs
	OP_NOT_ILIKE
	OP_JSON_GET_TEXT
	OP_JSON_PATH_TEXT
	OP_INET_SUBNET_EQ_L
	OP_INET_SUBNET_EQ_R
	OP_DISTANCE
	OP_PERP
	OP_PARALLEL
	OP_LEFT_OF_SEG
	OP_RIGHT_OF_SEG
	OP_BELOW_SEG
	OP_ABOVE_SEG
	OP_CBRT
	OP_ILIKE
	OP_NOT_LIKE
	OP_NOT_REGEX_I
	OP_JSON_GET
	OP_JSON_PATH
	OP_CONTAINS
	OP_CONTAINED_BY
	OP_OVERLAP
	OP_CONCAT
	OP_CAST
	OP_SHIFT_L
	OP_SHIFT_R
	OP_LE
	OP_GE
	OP_NEQ
	OP_NEQ_ALT
	OP_REGEX_I
	OP_NOT_REGEX
	OP_LIKE
	OP_PLUS_EQ
	OP_MINUS_EQ
	OP_MUL_EQ
	OP_DIV_EQ
	OP_PLUS
	OP_MINUS
	OP_MUL
	OP_DIV
	OP_MOD
	OP_EQ
	OP_LT
	OP_GT
	OP_TILDE
	OP_BANG
	OP_AMP
	OP_BAR
	OP_CARET
	OP_QUESTION

	//  ponctuations
	TK_POINT
	TK_COMMA
	TK_SEMICOLON
	TK_LPAREN
	TK_RPAREN
	TK_LBRACKET
	TK_RBRACKET
	TK_LBRACE
	TK_RBRACE
	TK_COLON

	// autres tokens
	TK_STRING
	TK_NUMBER
	IDENT
)

type Token struct {
	Kind TokenKind
	Text string
}
